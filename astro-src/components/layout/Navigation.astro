---
import Button from '../ui/Button.astro';

export interface Props {
  currentLang?: string;
}

const { currentLang = 'fr' } = Astro.props;

const navItems = {
  fr: [
    { href: '#about', label: 'Ã€ propos' },
    { href: '#services', label: 'Services & missions' },
    { href: '#contact', label: 'Contact' },
    { href: '#portfolio', label: 'Portfolio' },
  ],
  en: [
    { href: '#about', label: 'About us' },
    { href: '#services', label: 'Services & missions' },
    { href: '#contact', label: 'Contact' },
    { href: '#portfolio', label: 'Portfolio' },
  ]
};

const currentNavItems = navItems[currentLang as keyof typeof navItems] || navItems.fr;
---

<nav class="bg-bg/90 backdrop-blur-sm border-b border-primary-3 sticky top-0 z-50" role="navigation" aria-label="Main navigation">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-16">
      <!-- Logo -->
      <div class="flex-shrink-0">
        <a href="/" class="flex items-center space-x-2 text-primary-9 font-bold text-xl">
          <img src="/icon.png" alt="ESCEMI Logo" class="h-8 w-8" />
          <span>ESCEMI</span>
        </a>
      </div>

      <!-- Desktop Navigation -->
      <div class="hidden md:block">
        <ul class="flex space-x-8" role="menubar">
          {currentNavItems.map((item) => (
            <li role="none">
              <a 
                href={item.href} 
                class="text-fg hover:text-primary-9 transition-colors duration-200 font-medium"
                role="menuitem"
              >
                {item.label}
              </a>
            </li>
          ))}
        </ul>
      </div>

      <!-- Language Switcher -->
      <div class="flex items-center space-x-4">
        <div class="flex space-x-2">
          <Button 
            href={currentLang === 'fr' ? '/en' : '/'} 
            variant="ghost" 
            size="sm"
            class="text-sm"
          >
            {currentLang === 'fr' ? 'EN' : 'FR'}
          </Button>
        </div>

        <!-- Mobile menu button -->
        <button 
          type="button" 
          class="md:hidden inline-flex items-center justify-center p-2 rounded-brand text-fg hover:text-primary-9 hover:bg-primary-3 focus:outline-none focus:ring-2 focus:ring-accent-9"
          aria-controls="mobile-menu"
          aria-expanded="false"
          id="mobile-menu-button"
        >
          <span class="sr-only">Open main menu</span>
          <!-- Hamburger icon -->
          <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile Navigation -->
    <div class="md:hidden hidden" id="mobile-menu">
      <div class="px-2 pt-2 pb-3 space-y-1 sm:px-3">
        {currentNavItems.map((item) => (
          <a 
            href={item.href} 
            class="block px-3 py-2 rounded-brand text-base font-medium text-fg hover:text-primary-9 hover:bg-primary-3 transition-colors duration-200"
          >
            {item.label}
          </a>
        ))}
      </div>
    </div>
  </div>
</nav>

<script>
  // Mobile menu toggle functionality
  document.addEventListener('DOMContentLoaded', () => {
    const button = document.getElementById('mobile-menu-button');
    const menu = document.getElementById('mobile-menu');
    
    if (button && menu) {
      button.addEventListener('click', () => {
        const isExpanded = button.getAttribute('aria-expanded') === 'true';
        button.setAttribute('aria-expanded', (!isExpanded).toString());
        menu.classList.toggle('hidden');
      });
    }
  });

  // Smooth scroll for anchor links
  document.addEventListener('click', (e) => {
    const target = e.target as HTMLElement;
    if (target.tagName === 'A' && target.getAttribute('href')?.startsWith('#')) {
      e.preventDefault();
      const targetId = target.getAttribute('href')?.substring(1);
      const targetElement = targetId ? document.getElementById(targetId) : null;
      
      if (targetElement) {
        targetElement.scrollIntoView({
          behavior: 'smooth',
          block: 'start'
        });
      }
    }
  });
</script>

<style>
  /* Enhanced backdrop blur for better readability */
  nav {
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
  }
</style>